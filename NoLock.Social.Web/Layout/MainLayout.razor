@inherits LayoutComponentBase
@using NoLock.Social.Core.Identity.Interfaces
@using NoLock.Social.Core.Identity.Models
@using NoLock.Social.Web.Shared
@using System.Reactive.Linq
@inject ILoginAdapterService LoginService
@inject NavigationManager Navigation
@implements IDisposable

<LoginStatusIndicator />

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            @if (isLoggedIn)
            {
                <div class="user-info">
                    <span class="username">@username</span>
                    <button class="btn btn-outline-danger btn-sm ms-2" @onclick="HandleLogout">
                        <i class="bi bi-box-arrow-right"></i> Logout
                    </button>
                </div>
            }
            <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    private IDisposable? loginStateSubscription;
    private bool isLoggedIn;
    private string? username;

    protected override void OnInitialized()
    {
        // Set initial state
        isLoggedIn = LoginService.CurrentLoginState.IsLoggedIn;
        username = LoginService.CurrentLoginState.Username;

        // Subscribe to login state changes using Reactive Extensions
        loginStateSubscription = LoginService.LoginStateChanges
            .Subscribe(change =>
            {
                isLoggedIn = change.NewState.IsLoggedIn;
                username = change.NewState.Username;
                InvokeAsync(StateHasChanged);
            });
    }

    private async Task HandleLogout()
    {
        await LoginService.LogoutAsync();
        Navigation.NavigateTo("/", forceLoad: true);
    }

    public void Dispose()
    {
        loginStateSubscription?.Dispose();
    }
}
