@page "/camera"
@using NoLock.Social.Core.Identity.Interfaces
@using Microsoft.Extensions.Logging
@inject ILoginAdapterService LoginService
@inject NavigationManager Navigation
@inject ILogger<NoLock.Social.Web.Pages.Camera> Logger

<PageTitle>Camera</PageTitle>

<div class="container-fluid">
    <h1>Camera</h1>
    
    <NoLock.Social.Web.Components.Camera.CameraCapture 
        IsLoggedIn="@LoginService.CurrentLoginState.IsLoggedIn"
        AutoStart="true"
        ShowDocumentTypeSelection="true"
        ShowProcessButton="true"
        OnImageCaptured="@HandleImageCaptured"
        OnDocumentProcessed="@HandleDocumentProcessed"
        OnError="@HandleError" />
</div>

@code {
    protected override void OnInitialized()
    {
        Logger.LogInformation("Camera page initialized. IsLoggedIn: {IsLoggedIn}", LoginService.CurrentLoginState.IsLoggedIn);
        base.OnInitialized();
    }
    
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            Logger.LogInformation("Camera page first render. IsLoggedIn: {IsLoggedIn}", LoginService.CurrentLoginState.IsLoggedIn);
        }
        base.OnAfterRender(firstRender);
    }
    
    private void HandleImageCaptured(NoLock.Social.Core.Camera.Models.CapturedImage image)
    {
        Logger.LogInformation("Image captured: {ImageId}", image.Id);
    }
    
    private void HandleDocumentProcessed(List<NoLock.Social.Core.Camera.Models.CapturedImage> images)
    {
        Logger.LogInformation("Processing {Count} images", images.Count);
        Navigation.NavigateTo("/");
    }
    
    private void HandleError(string error)
    {
        Logger.LogError("Camera error: {Error}", error);
    }
}